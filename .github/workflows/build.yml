name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  backend:
    name: Back-end
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Backend
        run: task backend:build

      - name: Test Backend
        run: task backend:coverage

      - name: Upload Go Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage-report
          path: backend/src/coverage.out
          retention-days: 1

  frontend:
    name: Front-end
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.x'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  sonar:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download Go Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: go-coverage-report
          path: backend/src

#      - name: Download TS Coverage Report
#        uses: actions/download-artifact@v4
#        with:
#          name: ts-coverage-report
#          path: frontend/coverage/ # Ensure it's downloaded to the correct relative path

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}